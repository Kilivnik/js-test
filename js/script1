// const select = document.querySelector("#colorSelect");
// const button = document.querySelector(".btn");

// const { forEach } = require("lodash");

// console.dir(select);

// button.addEventListener("click", () => {
//   const selected = select.selectedIndex;
//   console.log(selected);
//   select.remove(selected);
// });

// Напишіть програму JavaScript для відображення випадкового зображення
//(натискання кнопки) з наступного списку.
//
// "https://images.pexels.com/photos/462024/pexels-photo-462024.jpeg?cs=srgb&dl=pexels-pixabay-462024.jpg&fm=jpg", width: "240", height: "160"
// "https://images.pexels.com/photos/1089168/pexels-photo-1089168.jpeg?cs=srgb&dl=pexels-nathan-cowley-1089168.jpg&fm=jpg", width: "320", height: "195"
// "https://images.pexels.com/photos/1300510/pexels-photo-1300510.jpeg?cs=srgb&dl=pexels-nathan-cowley-1300510.jpg&fm=jpg", width: "500", height: "343"

const imagesList = [
  {
    url: "https://images.pexels.com/photos/462024/pexels-photo-462024.jpeg?cs=srgb&dl=pexels-pixabay-462024.jpg&fm=jpg",
    width: "240",
    height: "160",
  },
  {
    url: "https://images.pexels.com/photos/1089168/pexels-photo-1089168.jpeg?cs=srgb&dl=pexels-nathan-cowley-1089168.jpg&fm=jpg",
    width: "320",
    height: "195",
  },
  {
    url: "https://images.pexels.com/photos/1300510/pexels-photo-1300510.jpeg?cs=srgb&dl=pexels-nathan-cowley-1300510.jpg&fm=jpg",
    width: "500",
    height: "343",
  },
];

const newList = imagesList
  .map(
    ({ url, width, height }) =>
      `<img src="${url}" width="${width}" height="${height}">`
  )
  .join("");

const ul = document.createElement("ul");
ul.innerHTML = newList;
const body = document.querySelector("body");
body.appendChild(ul);

const pAll = document.querySelectorAll("p");
console.log(pAll);

const link = pAll[0].querySelector("a");
console.log(link);

const strongText = pAll[1];
console.log(strongText);

const newText = strongText.querySelectorAll("strong");
console.log(newText);

link.addEventListener("mouseout", () => {
  console.log("mouseout");
  chengeColor("black");
});

link.addEventListener("mouseover", (event) => {
  console.log("mouseover");
  console.log(event);
  chengeColor("red");
});

const chengeColor = (color) => {
  newText.forEach((item) => {
    item.style.color = color;
  });
};

// Напишіть програму на JavaScript, щоб отримати ширину та висоту вікна (щоразу, коли розмір вікна змінюється).

// <!DOCTYPE html>
// <html>
// <head>
// <meta charset=utf-8 />
//   <title>Window Size : height and width</title>
// </head>
// <!-- Resize the window (here output panel) and see the result !-->
// <body onload="getSize()" onresize="getSize()">
// <div id="wh">
//   <!-- Place height and width size here! -->
// </div>
// <body>
// </body>
// </html>

// Даний список повідомлень із кнопками для видалення [x]. Напишіть код, щоб кнопки працювали.
//
// <!DOCTYPE HTML>
// <html>
//
// <head>
// <link rel="stylesheet" href="messages.css">
//   <meta charset="utf-8">
//   </head>
//
// <body>
//
// <div id="container">
//   <div class="pane">
//     <h3>Lorem Ipsum</h3>
//     <p> Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. </p>
//     <button class="remove-button">[x]</button>
//   </div>
//   <div class="pane">
//     <h3>Where does it come from?</h3>
//     <p>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old.</p>
//     <button class="remove-button">[x]</button>
//   </div>
//   <div class="pane">
//     <h3>Why do we use it?</h3>
//     <p>It is a long established fact that a reader will be distracted by the readable con

// Створіть дерево, яке по кліку на заголовок приховує-показує нащадків:
//
//   Вимоги:
//
//     Використовувати лише один обробник подій (застосувати делегування)
// Клік поза текстом заголовка (на порожньому місці) нічого не повинен робити.
//
//   Рішення складається з двох кроків:
//
//   Повертаємо текст кожного заголовка дерева елемент <span>. Потім ми можемо додати стилі CSS на :hover і обробляти кліки лише з тексті, т.к. ширина елемента <span> точно співпадає з шириною тексту.
//   Встановлюємо обробник на кореневий вузол дерева tree та ловимо кліки на елементах <span>, що містять заголовки.

// <!DOCTYPE HTML>
// <html>
//
// <head>
// <style>
// .tree span:hover {
//   font-weight: bold;
// }
//
// .tree span {
//   cursor: pointer;
// }
// </style>
// <meta charset="utf-8">
// </head>
//
// <body>
//
// <ul class="tree" id="tree">
//   <li>Animals
//     <ul>
//       <li>Mammals
//         <ul>
//           <li>Cows</li>
//           <li>Donkeys</li>
//           <li>Dogs</li>
//           <li


https://jsfiddle.net/
